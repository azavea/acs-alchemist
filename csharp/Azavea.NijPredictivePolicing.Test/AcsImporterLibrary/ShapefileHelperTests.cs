using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using log4net;
using System.Net;
using System.IO;
using Azavea.NijPredictivePolicing.Common;
using Azavea.NijPredictivePolicing.Test.Helpers;
using Azavea.NijPredictivePolicing.AcsImporterLibrary;
using System.Data;
using Azavea.NijPredictivePolicing.AcsImporterLibrary.Transfer;
using Azavea.NijPredictivePolicing.AcsImporterLibrary.FileFormats;

namespace Azavea.NijPredictivePolicing.Test.AcsImporterLibrary
{
    [TestFixture]
    public class ShapefileHelperTests
    {
        /// <summary>
        /// Place to dump files generated by tests
        /// </summary>
        protected const string OutputDir = "output\\";

        private static ILog _log = null;



        [TestFixtureSetUp]
        public void Init()
        {
            _log = LogHelpers.ResetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

            if (!Directory.Exists(OutputDir))
                Directory.CreateDirectory(OutputDir);
        }

        [Test]
        public void ForbiddenNames()
        {
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName(""), false);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName(""), false);
            
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("bg00_d00.shp"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("tr99_d00"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("cs55_d00.shp"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("z327_d00"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("zt00_d00.shp"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("vt00_d00"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("co00_d00.shp"), true);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("co00_d00"), true);

            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("co00_d0a_shp.zip"), false);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("co00_da0_shp.zip"), false);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("co00_daa_shp.zip"), false);
            Assert.AreEqual(ShapefileHelper.IsForbiddenShapefileName("co00_d00_shp.zip"), false);
        }

    }
}
