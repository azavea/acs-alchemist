using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using log4net;
using System.Net;
using System.IO;
using Azavea.NijPredictivePolicing.Common;
using Azavea.NijPredictivePolicing.Test.Helpers;

namespace Azavea.NijPredictivePolicing.Test
{
    [TestFixture]
    public class FileRetrievalTests
    {
        /// <summary>
        /// Place to dump files generated by tests
        /// </summary>
        protected const string OutputDir = "output\\";

        private static ILog _log = null;

        //TODO: Add this to a utilities class somewhere
        public static void CopyTo(Stream from, Stream to)
        {
            byte[] buffer = new byte[4096];
            int read = 0;
            while ((read = from.Read(buffer, 0, buffer.Length)) > 0)
                to.Write(buffer, 0, read);
        }

        [TestFixtureSetUp]
        public void Init()
        {
            _log = LogHelpers.ResetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

            if (!Directory.Exists(OutputDir))
                Directory.CreateDirectory(OutputDir);
        }


        [Test]
        public void GetPaBlockGroupsFile()
        {
            bool getFile = false;   //Set to true if you actually want to download the file
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(
                Settings.GetStateBlockGroupFileUrl(StateList.Pennsylvania));

            request.KeepAlive = false;  //We're only doing this once

            request.Credentials = CredentialCache.DefaultCredentials;
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();

            _log.DebugFormat("Content length is {0}", response.ContentLength);
            _log.DebugFormat("Content type is {0}", response.ContentType);

            if (getFile)
            {
                Stream data = response.GetResponseStream();
                _log.DebugFormat("Response stream received.");

                FileStream writeme = new FileStream(
                    Path.Combine(OutputDir, Settings.GetStateBlockGroupFileName(StateList.Pennsylvania)),
                    FileMode.Create
                    );

                CopyTo(data, writeme);

                data.Close();
                writeme.Close();
            }

            response.Close();
        }
    }
}
